version: '3'

services:

# ----------------------- TRAEFIK REVERSE PROXY ---------
    traefik:
        image: traefik:2.0.4
        container_name: traefik
        ports:
            - 80:80
            - 443:443
            - 8080:8080
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - $PWD/traefik.toml:/etc/traefik/traefik.toml
        networks:
            traefik-inside:
            traefik-outside:

# ----------------------- API ---------
    api:
        build: ./api
        container_name: api-matcha
        image: api-matcha
        command: go run main.go user.go
        volumes:
          - ./api/:/usr/src/api/
        labels:
          - "traefik.enable=true"
          - "traefik.docker.network=traefik-inside"
          - "traefik.http.routers.adminer.rule=PathPrefix(`/pgadmin`)"
          - "traefik.http.routers.adminer.entrypoints=admin"
          - "traefik.http.services.adminer.loadbalancer.server.port=8080"
        environment:
          - SQL_USER=matcha
          - SQL_PASSWORD=secret
          - SQL_DATABASE=match
          - SQL_PORT=5432
        depends_on:
          - db
        networks:
          - backend

# DATABASE

    db:
        image: postgres:12.0-alpine
        container_name: db-matcha
        environment:
          - POSTGRES_USER=matcha
          - POSTGRES_PASSWORD=secret
          - POSTGRES_DB=matcha
        ports:
          - 5432:5432
        volumes:
          - db/data:/var/lib/postgresql/data
        networks:
          - backend

# PG ADMIN

    pgadmin:
        container_name: pgadmin_container
        image: dpage/pgadmin4
        environment:
          PGADMIN_DEFAULT_EMAIL: matcha
          PGADMIN_DEFAULT_PASSWORD: secret
        depends_on:
          - "traefik"
          - "db"
        ports:
          - 5432:80
        networks:
          backend:
          traefik-inside:
        labels:
          - "traefik.enable=true"
          - "traefik.docker.network=traefik-inside"
          - "traefik.http.routers.adminer.rule=PathPrefix(`/pgadmin`)"
          - "traefik.http.routers.adminer.entrypoints=admin"
          - "traefik.http.services.adminer.loadbalancer.server.port=8080"
        restart: unless-stopped

networks:
    traefik-inside:
        name: traefik-inside
    traefik-outside:
        name: traefik-outside
    backend:
        name: backend
